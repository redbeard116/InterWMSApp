// <auto-generated />
using InterWMSApp.Services.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InterWMSApp.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210617172744_New")]
    partial class New
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InterWMSApp.Models.AccessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("accesstypes","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("login")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("auths","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CounterpartyId")
                        .HasColumnName("counterpartyid")
                        .HasColumnType("integer");

                    b.Property<long>("Date")
                        .HasColumnName("date")
                        .HasColumnType("bigint");

                    b.Property<double>("Sum")
                        .HasColumnName("sum")
                        .HasColumnType("double precision");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CounterpartyId");

                    b.ToTable("contracts","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.Counterparty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Account")
                        .HasColumnName("account")
                        .HasColumnType("integer");

                    b.Property<int>("INN")
                        .HasColumnName("inn")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("counterpartyes","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.NumberProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Count")
                        .HasColumnName("count")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnName("productid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("numberproducts","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.OperationProduct", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnName("contractId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnName("productid")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnName("count")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Sum")
                        .HasColumnName("sum")
                        .HasColumnType("double precision");

                    b.HasKey("ContractId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("operationproducts","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int>("StorageAreaId")
                        .HasColumnName("storageid")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnName("typeid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StorageAreaId")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("products","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("double precision");

                    b.Property<long>("Date")
                        .HasColumnName("date")
                        .HasColumnType("bigint");

                    b.Property<string>("PriceType")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnName("productid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("prices","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("producttypes","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.RightsGrid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccessTypeId")
                        .HasColumnName("accetTypeid")
                        .HasColumnType("integer");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnName("userRole")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccessTypeId");

                    b.HasIndex("UserRole")
                        .IsUnique();

                    b.ToTable("rightsgrids","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.StorageArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Location")
                        .HasColumnName("location")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("storageareas","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("role")
                        .HasColumnType("text");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnName("secondname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users","public");
                });

            modelBuilder.Entity("InterWMSApp.Models.Auth", b =>
                {
                    b.HasOne("InterWMSApp.Models.User", "User")
                        .WithOne("Auth")
                        .HasForeignKey("InterWMSApp.Models.Auth", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.Contract", b =>
                {
                    b.HasOne("InterWMSApp.Models.Counterparty", "Counterparty")
                        .WithMany("Contracts")
                        .HasForeignKey("CounterpartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.Counterparty", b =>
                {
                    b.HasOne("InterWMSApp.Models.User", "User")
                        .WithOne("Counterparty")
                        .HasForeignKey("InterWMSApp.Models.Counterparty", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.NumberProducts", b =>
                {
                    b.HasOne("InterWMSApp.Models.Product", "Product")
                        .WithOne("NumberProduct")
                        .HasForeignKey("InterWMSApp.Models.NumberProducts", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.OperationProduct", b =>
                {
                    b.HasOne("InterWMSApp.Models.Contract", "Contract")
                        .WithMany("OperationProducts")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterWMSApp.Models.Product", "Product")
                        .WithMany("OperationProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.Product", b =>
                {
                    b.HasOne("InterWMSApp.Models.StorageArea", "StorageArea")
                        .WithOne("Product")
                        .HasForeignKey("InterWMSApp.Models.Product", "StorageAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterWMSApp.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.ProductPrice", b =>
                {
                    b.HasOne("InterWMSApp.Models.Product", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterWMSApp.Models.RightsGrid", b =>
                {
                    b.HasOne("InterWMSApp.Models.AccessType", "AccessType")
                        .WithMany("RightsGrids")
                        .HasForeignKey("AccessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
